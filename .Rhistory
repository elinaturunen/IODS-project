math <- read.table("student-mat.csv", sep = ";" , header=TRUE)
str(math)
dim(math)
por <- read.table("student-por.csv", sep = ";" , header=TRUE)
str(por)
dim(por)
library(dplyr
library(dplyr)
library(dplyr)
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
math_por <- inner_join(math, por, by = join_by, suffix = c(".math", ".por"))
colnames(math_por)
glimpse(math_por)
alc <- select(math_por, one_of(join_by))
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
notjoined_columns
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(math_por, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
glimpse(alc)
library(ggplot2)
alc <- mutate(alc, alc_use = (Dalc + Walc) / 2)
alc <- mutate(alc, high_use = alc_use > 2)
glimpse(alc)
write.csv(alc, file = "alc.csv")
read.table("alc.csv", sep = ";", header=TRUE)
colnames(alc)
library(tidyr); library(dplyr); library(ggplot2)
install(tidyr)
install.packages("tidyr")
library(tidyr)
ggplot(aes(absences)) + geom_bar() + facet_wrap("key", scales = "free")
g1 <- ggplot(alc, aes(x = absences, y = high_use))
g2 + geom_boxplot() + ylab("high_use")
g1 + geom_boxplot() + ylab("high_use")
p1 <- ggplot(alc, aes(x = absences, y = high_use))
p2 <- p1 + geom_point(aes("points"))
p2
p <- ggpairs(alc, mapping = aes(), lower = list(combo = wrap("facethist", bins = 20)))
library(GGally)
p <- ggpairs(alc, mapping = aes(), lower = list(combo = wrap("facethist", bins = 20)))
p
p <- ggpairs(alc, mapping = aes("absences", "schoolsup", "higher", "high_use"), lower = list(combo = wrap("facethist", bins = 20)))
g1 <- ggplot(data = alc, aes(x = high_use))
g1 + geom_bar(aes)
g1 + geom_bar(aes())
g1 <- ggplot(data = alc, aes(x = absences))
g1 + geom_bar(aes())
g1 <- ggplot(data = alc, aes(x = schoolsup))
g1 + geom_bar(aes())
g1 <- ggplot(data = alc, aes(x = higher))
g1 + geom_bar(aes())
![~/Desktop/IODS-project/absences_Rplot.png](path)
g1 <- ggplot(data = alc, aes(x = absences, y = high_use))
g1 + geom_bar(aes())
gather(alc$absences, alc$schoolsup, alc$higher, alc$high_use) %>% ggplot(aes(value)) + geom_bar() + facet_wrap("key", scales = "free")
gather(alc$absences; alc$schoolsup; alc$higher; alc$high_use) %>% ggplot(aes(value)) + geom_bar() + facet_wrap("key", scales = "free")
gather(alc$absences + alc$schoolsup + alc$higher + alc$high_use) %>% ggplot(aes(value)) + geom_bar() + facet_wrap("key", scales = "free")
g1 <- ggplot(alc, aes(x = absences, y = high_use))
g1 + geom_boxplot() + ylab("absences")
g1 <- ggplot(alc, aes(x = high_use, y = absences))
g1 + geom_boxplot() + ylab("absences")
g1 <- ggplot(alc, aes(x = high_use, y = schoolsup))
g1 + geom_boxplot() + ylab("school support")
g1 <- ggplot(alc, aes(x = high_use, y = higher))
g1 + geom_boxplot() + ylab("higher education")
g1 <- ggplot(alc, aes(x = schoolsup, y = high_use))
g1 + geom_boxplot() + ylab("school support")
g1 <- ggplot(data = alc, aes(x = high_use, y = absences))
g1 + geom_bar(aes())
g1 <- ggplot(data = alc, aes(x = high_use))
g1 + geom_bar(aes(y = absences))
g1 <- ggplot(alc, x = high_use, y = absences)
g1 + geom_bar(aes())
g1 <- ggplot(alc, x = high_use, y = absences)
g1 + geom_bar(aes(x = high_use))
g1 <- ggplot(alc, x = high_use, y = higher)
g1 + geom_bar(aes(x = high_use))
g1 <- ggplot(alc, x = high_use, y = school sup)
g1 <- ggplot(alc, x = high_use, y = schoolsup)
g1 + geom_bar(aes(x = high_use))
g1 <- ggplot(alc, x = schoolsup)
g1 + geom_bar(aes(fill = high_use))
g1 + geom_bar(aes(x = schoolsup, fill = high_use))
g1 <- ggplot(alc, x = higher)
g1 + geom_bar(aes(x = higher, fill = high_use))
m <- glm(high_use ~ absences + schoolsup + higher, data = alc, family = "binomial")
summary(m)
coef(m)
OR <- coef(m) %>% exp
CI <- confint(m) %>% exp
cbind(OR, CI)
